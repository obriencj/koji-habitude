# Complex circular dependency scenario
# Multiple overlapping circular dependencies

---
type: tag
name: base-tag
arches: [x86_64]
locked: true

---
type: tag
name: tag-1
arches: [x86_64]
inheritance:
  - name: tag-2
    priority: 10
  - name: base-tag
    priority: 20

---
type: tag
name: tag-2
arches: [x86_64]
inheritance:
  - name: tag-3
    priority: 10

---
type: tag
name: tag-3
arches: [x86_64]
inheritance:
  - name: tag-1
    priority: 10

---
type: tag
name: tag-4
arches: [x86_64]
inheritance:
  - name: tag-5
    priority: 10

---
type: tag
name: tag-5
arches: [x86_64]
inheritance:
  - name: tag-4
    priority: 10

# This creates:
# - Circular dependency: tag-1 -> tag-2 -> tag-3 -> tag-1
# - Circular dependency: tag-4 -> tag-5 -> tag-4
# - Both depend on base-tag (which should be processed first)

# The end.
